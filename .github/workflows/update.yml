name: Sync Files

on:
  schedule:
    - cron: '0 0 * * *'
  workflow_dispatch:

jobs:
  sync-files:
    runs-on: ubuntu-latest

    steps:
    - name: Setup Temporary Repository
      run: |
        mkdir repo-temp
        cd repo-temp
        git init
        git remote add origin https://github.com/vernesong/OpenClash.git
        git fetch origin dev

    - name: Get Last Commit ID and Message
      id: get_commit
      run: |
        cd repo-temp  # Pindah ke direktori repo-temp
        LAST_COMMIT=$(git log -1 --pretty=format:"%H" origin/dev)
        COMMIT_MESSAGE=$(git log -1 --pretty=format:"%s" origin/dev)
        echo "last_commit=$LAST_COMMIT" >> $GITHUB_ENV
        echo "commit_message=$COMMIT_MESSAGE" >> $GITHUB_ENV

    - name: Get Commit with Same Message
      id: get_commit_same_message
      run: |
        cd repo-temp  # Pindah ke direktori repo-temp
        COMMIT_WITH_SAME_MESSAGE=$(git log --grep="${{ env.commit_message }}" --pretty=format:"%H" origin/dev -1)
        echo "commit_with_same_message=$COMMIT_WITH_SAME_MESSAGE" >> $GITHUB_ENV

    - name: Get Changed Files
      id: get_changed_files
      run: |
        cd repo-temp  # Pindah ke direktori repo-temp
        FILES_CHANGED=$(git diff-tree --no-commit-id --name-only -r ${{ env.commit_with_same_message }})
        echo "files_changed=$FILES_CHANGED" >> $GITHUB_ENV

    - name: Checkout Changed Files
      run: |
        cd repo-temp  # Pindah ke direktori repo-temp
        IFS=',' read -ra FILE_ARRAY <<< "${{ env.files_changed }}"
        for file in "${FILE_ARRAY[@]}"; do
            git checkout ${{ env.commit_with_same_message }} -- "$file"
        done

    - name: Checkout Current Repository
      uses: actions/checkout@v2

    - name: Copy Changed Files to Current Repo
      run: |
        cp -r repo-temp/* .  # Menyalin file yang diubah ke repository saat ini
        
    - name: Commit and Push Changes
      run: |
        git config --local user.name "github-actions[bot]"
        git config --local user.email "github-actions[bot]@users.noreply.github.com"
        git add .
        git commit -m "${{ env.commit_message }}"
        git push
      env:
        GITHUB_TOKEN: ${{ secrets.TOKEN_GITHUB }}
